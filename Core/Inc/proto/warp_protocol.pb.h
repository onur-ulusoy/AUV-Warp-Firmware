/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PROTO_WARP_PROTOCOL_PB_H_INCLUDED
#define PB_PROTO_WARP_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Sensors { 
    float ch0_current; 
    float ch1_current; 
    float ch2_current; 
    float ch3_current; 
    float ch4_current; 
    float ch5_current; 
    float ch6_current; 
    float ch7_current; 
    float batt_voltage; 
    float batt_current; 
} Sensors;

typedef struct _WarpCommand { 
    uint32_t ch0; 
    uint32_t ch1; 
    uint32_t ch2; 
    uint32_t ch3; 
    uint32_t ch4; 
    uint32_t ch5; 
    uint32_t ch6; 
    uint32_t ch7; 
} WarpCommand;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define WarpCommand_init_default                 {0, 0, 0, 0, 0, 0, 0, 0}
#define Sensors_init_default                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define WarpCommand_init_zero                    {0, 0, 0, 0, 0, 0, 0, 0}
#define Sensors_init_zero                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Sensors_ch0_current_tag                  1
#define Sensors_ch1_current_tag                  2
#define Sensors_ch2_current_tag                  3
#define Sensors_ch3_current_tag                  4
#define Sensors_ch4_current_tag                  5
#define Sensors_ch5_current_tag                  6
#define Sensors_ch6_current_tag                  7
#define Sensors_ch7_current_tag                  8
#define Sensors_batt_voltage_tag                 9
#define Sensors_batt_current_tag                 10
#define WarpCommand_ch0_tag                      1
#define WarpCommand_ch1_tag                      2
#define WarpCommand_ch2_tag                      3
#define WarpCommand_ch3_tag                      4
#define WarpCommand_ch4_tag                      5
#define WarpCommand_ch5_tag                      6
#define WarpCommand_ch6_tag                      7
#define WarpCommand_ch7_tag                      8

/* Struct field encoding specification for nanopb */
#define WarpCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   ch0,               1) \
X(a, STATIC,   SINGULAR, UINT32,   ch1,               2) \
X(a, STATIC,   SINGULAR, UINT32,   ch2,               3) \
X(a, STATIC,   SINGULAR, UINT32,   ch3,               4) \
X(a, STATIC,   SINGULAR, UINT32,   ch4,               5) \
X(a, STATIC,   SINGULAR, UINT32,   ch5,               6) \
X(a, STATIC,   SINGULAR, UINT32,   ch6,               7) \
X(a, STATIC,   SINGULAR, UINT32,   ch7,               8)
#define WarpCommand_CALLBACK NULL
#define WarpCommand_DEFAULT NULL

#define Sensors_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    ch0_current,       1) \
X(a, STATIC,   SINGULAR, FLOAT,    ch1_current,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    ch2_current,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    ch3_current,       4) \
X(a, STATIC,   SINGULAR, FLOAT,    ch4_current,       5) \
X(a, STATIC,   SINGULAR, FLOAT,    ch5_current,       6) \
X(a, STATIC,   SINGULAR, FLOAT,    ch6_current,       7) \
X(a, STATIC,   SINGULAR, FLOAT,    ch7_current,       8) \
X(a, STATIC,   SINGULAR, FLOAT,    batt_voltage,      9) \
X(a, STATIC,   SINGULAR, FLOAT,    batt_current,     10)
#define Sensors_CALLBACK NULL
#define Sensors_DEFAULT NULL

extern const pb_msgdesc_t WarpCommand_msg;
extern const pb_msgdesc_t Sensors_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define WarpCommand_fields &WarpCommand_msg
#define Sensors_fields &Sensors_msg

/* Maximum encoded size of messages (where known) */
#define Sensors_size                             50
#define WarpCommand_size                         48

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
